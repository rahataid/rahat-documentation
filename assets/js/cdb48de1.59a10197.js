"use strict";(self.webpackChunkrahat_documentation=self.webpackChunkrahat_documentation||[]).push([[5686],{28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(96540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}},58548:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Core-Modules/Rahat-Users-Management","title":"Rahat Users Management","description":"Overview","source":"@site/dev-docs/Core-Modules/05.Rahat-Users-Management.md","sourceDirName":"Core-Modules","slug":"/Core-Modules/Rahat-Users-Management","permalink":"/dev-docs/Core-Modules/Rahat-Users-Management","draft":false,"unlisted":false,"editUrl":"https://github.com/rahataid/rahat-documentation/blob/dev/dev-docs/Core-Modules/05.Rahat-Users-Management.md","tags":[],"version":"current","lastUpdatedAt":1754478291000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Rahat Users Management"},"sidebar":"myAutogeneratedSidebar","previous":{"title":"Rahat Microservice Management","permalink":"/dev-docs/Core-Modules/Rahat-Microservice-Management"},"next":{"title":"Installation","permalink":"/dev-docs/Project-Modules/Anticipatory-Action/Installation"}}');var t=r(74848),i=r(28453);const l={sidebar_position:6,title:"Rahat Users Management"},a="Rahat Users Management",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Core Components",id:"core-components",level:3},{value:"1. Users Module (<code>UsersModule</code>)",id:"1-users-module-usersmodule",level:4},{value:"2. Users Service (<code>UsersService</code>)",id:"2-users-service-usersservice",level:4},{value:"3. Users Controller (<code>CustomUsersController</code>)",id:"3-users-controller-customuserscontroller",level:4},{value:"Features",id:"features",level:2},{value:"1. User Creation with Custodial Wallets",id:"1-user-creation-with-custodial-wallets",level:3},{value:"2. Wallet Management",id:"2-wallet-management",level:3},{value:"3. Multi-Chain Support (Future)",id:"3-multi-chain-support-future",level:3},{value:"Database Schema",id:"database-schema",level:2},{value:"User Model",id:"user-model",level:3},{value:"Related Models",id:"related-models",level:3},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"1. Get User Wallets",id:"1-get-user-wallets",level:3},{value:"Integration with @rumsan/user Package",id:"integration-with-rumsanuser-package",level:2},{value:"1. Base Functionality",id:"1-base-functionality",level:3},{value:"2. Custom Extensions",id:"2-custom-extensions",level:3},{value:"Wallet Service Integration",id:"wallet-service-integration",level:2},{value:"1. Custodial Wallet Creation",id:"1-custodial-wallet-creation",level:3},{value:"2. Chain Configuration",id:"2-chain-configuration",level:3},{value:"3. Supported Chains",id:"3-supported-chains",level:3},{value:"Security Features",id:"security-features",level:2},{value:"1. Authentication",id:"1-authentication",level:3},{value:"2. Authorization",id:"2-authorization",level:3},{value:"3. Wallet Security",id:"3-wallet-security",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"1. Creating a New User",id:"1-creating-a-new-user",level:3},{value:"2. Retrieving User Wallets",id:"2-retrieving-user-wallets",level:3},{value:"3. User Authentication",id:"3-user-authentication",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"1. Wallet Creation Errors",id:"1-wallet-creation-errors",level:3},{value:"2. Authentication Errors",id:"2-authentication-errors",level:3},{value:"Configuration",id:"configuration",level:2},{value:"1. Environment Variables",id:"1-environment-variables",level:3},{value:"2. Chain Configuration",id:"2-chain-configuration-1",level:3},{value:"Monitoring and Logging",id:"monitoring-and-logging",level:2},{value:"1. User Creation Logs",id:"1-user-creation-logs",level:3},{value:"2. Error Logging",id:"2-error-logging",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"1. Multi-Chain Support",id:"1-multi-chain-support",level:3},{value:"2. Enhanced Security",id:"2-enhanced-security",level:3},{value:"3. Advanced Features",id:"3-advanced-features",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rahat-users-management",children:"Rahat Users Management"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The User Management system in the Rahat platform provides comprehensive user authentication, authorization, and wallet management capabilities. It leverages the ",(0,t.jsx)(n.code,{children:"@rumsan/user"})," package for core user functionality while integrating with the platform's ",(0,t.jsx)(n.code,{children:"WalletService"})," for custodial wallet management."]}),"\n",(0,t.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.h3,{id:"core-components",children:"Core Components"}),"\n",(0,t.jsxs)(n.h4,{id:"1-users-module-usersmodule",children:["1. Users Module (",(0,t.jsx)(n.code,{children:"UsersModule"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The main module that orchestrates user management operations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Module({\n  imports: [\n    PrismaModule,\n    RSUserModule.register([{ provide: RSUserService, useClass: UsersService }]),\n  ],\n  controllers: [CustomUsersController],\n  providers: [PrismaService, EventEmitter2, UsersService],\n  exports: [PrismaService, EventEmitter2, UsersService],\n})\nexport class UsersModule {}\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"2-users-service-usersservice",children:["2. Users Service (",(0,t.jsx)(n.code,{children:"UsersService"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Extends the ",(0,t.jsx)(n.code,{children:"@rumsan/user"})," package's ",(0,t.jsx)(n.code,{children:"UsersService"})," to add wallet functionality:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Injectable()\nexport class UsersService extends RSUserService {\n  constructor(\n    protected readonly prisma: PrismaService,\n    protected readonly eventEmitter: EventEmitter2,\n    protected readonly walletService: WalletService\n  ) {\n    super(prisma, eventEmitter);\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"3-users-controller-customuserscontroller",children:["3. Users Controller (",(0,t.jsx)(n.code,{children:"CustomUsersController"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Provides REST API endpoints for user management:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Controller('users')\n@ApiTags('Users')\n@ApiBearerAuth(APP.JWT_BEARER)\n@UseGuards(JwtGuard, AbilitiesGuard)\nexport class CustomUsersController {\n  constructor(private usersService: UsersService) {}\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsx)(n.h3,{id:"1-user-creation-with-custodial-wallets",children:"1. User Creation with Custodial Wallets"}),"\n",(0,t.jsx)(n.p,{children:"When creating a new user, the system automatically generates a custodial wallet:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async create(userData: CreateUserDto) {\n  console.log('Creating a new user with a random wallet address');\n\n  try {\n    // Use wallet service's configured chain (single-chain per instance)\n    const randomWallet = await this.walletService.createWallet();\n\n    console.log('Random wallet created:', {\n      address: randomWallet.address,\n      blockchain: randomWallet.blockchain || 'detected',\n    });\n\n    userData.wallet = randomWallet.address;\n\n    return super.create(userData);\n  } catch (error) {\n    console.error('Error creating user wallet:', error);\n    throw error;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-wallet-management",children:"2. Wallet Management"}),"\n",(0,t.jsx)(n.p,{children:"Users can retrieve their wallet information:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async getWallets(dto: ListUserDto) {\n  console.log('Listing users');\n  const userListData = await super.list(dto);\n  const wallets = userListData.data.map((user) => {\n    return {\n      name: user.name,\n      wallet: user.wallet,\n      // TODO: Multi-chain support - Add chain type detection\n      // chainType: this.detectChainFromWallet(user.wallet)\n    };\n  });\n  return wallets;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-multi-chain-support-future",children:"3. Multi-Chain Support (Future)"}),"\n",(0,t.jsx)(n.p,{children:"The system is designed for future multi-chain support:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// TODO: Multi-chain support - Currently uses instance's configured chain\n// Future: Allow chain selection per user\n\n// TODO: Multi-chain support - Helper method for future use\n// private detectChainFromWallet(walletAddress: string): string {\n//   if (walletAddress?.startsWith('0x') && walletAddress.length === 42) {\n//     return 'evm';\n//   }\n//   if (walletAddress?.length === 56 && walletAddress.startsWith('G')) {\n//     return 'stellar';\n//   }\n//   return 'unknown';\n// }\n"})}),"\n",(0,t.jsx)(n.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,t.jsx)(n.h3,{id:"user-model",children:"User Model"}),"\n",(0,t.jsxs)(n.p,{children:["The user data is stored in the ",(0,t.jsx)(n.code,{children:"User"})," table with the following structure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-prisma",children:'model User {\n  id        Int     @id @default(autoincrement())\n  uuid      String  @unique @default(uuid())\n  name      String?\n  gender    Gender  @default(UNKNOWN)\n  email     String?\n  phone     String?\n  wallet    String?  // Custodial wallet address\n  extras    Json?    @db.JsonB()\n  notes     String?  @db.Text()\n  sessionId String?\n\n  Auth          Auth[]\n  UserRole      UserRole[]\n  Signup        Signup[]\n  VendorProject ProjectVendors[]\n\n  createdAt DateTime  @default(now())\n  updatedAt DateTime? @updatedAt()\n  deletedAt DateTime?\n  createdBy String?\n  updatedBy String?\n\n  grievances Grievance[] @relation("UserGrievances")\n\n  @@map("tbl_users")\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"related-models",children:"Related Models"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auth"}),": Authentication records for different services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UserRole"}),": Role assignments for users"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Role"}),": System roles with permissions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Permission"}),": Granular permissions for access control"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,t.jsx)(n.h3,{id:"1-get-user-wallets",children:"1. Get User Wallets"}),"\n",(0,t.jsx)(n.p,{children:"Retrieve wallet information for users:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Get('wallets')\n@CheckAbilities({ actions: ACTIONS.READ, subject: SUBJECTS.USER })\ngetWallets(@Query() dto: ListUserDto) {\n  return this.usersService.getWallets(dto);\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"}),": ",(0,t.jsx)(n.code,{children:"GET /users/wallets"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Query Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"page"}),": Page number for pagination"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"limit"}),": Number of items per page"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"search"}),": Search term for filtering users"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sortBy"}),": Field to sort by"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sortOrder"}),": Sort order (asc/desc)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Response"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "name": "John Doe",\n    "wallet": "0x1234567890abcdef..."\n  }\n]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-rumsanuser-package",children:"Integration with @rumsan/user Package"}),"\n",(0,t.jsx)(n.h3,{id:"1-base-functionality",children:"1. Base Functionality"}),"\n",(0,t.jsxs)(n.p,{children:["The system extends the ",(0,t.jsx)(n.code,{children:"@rumsan/user"})," package to provide:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User CRUD Operations"}),": Create, read, update, delete users"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentication"}),": JWT-based authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authorization"}),": Role-based access control (RBAC)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Handling"}),": User lifecycle events"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-custom-extensions",children:"2. Custom Extensions"}),"\n",(0,t.jsx)(n.p,{children:"The platform extends the base functionality with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custodial Wallet Integration"}),": Automatic wallet creation for new users"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-Chain Support"}),": Support for EVM and Stellar chains"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Controllers"}),": Platform-specific API endpoints"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"wallet-service-integration",children:"Wallet Service Integration"}),"\n",(0,t.jsx)(n.h3,{id:"1-custodial-wallet-creation",children:"1. Custodial Wallet Creation"}),"\n",(0,t.jsx)(n.p,{children:"When a new user is created, the system:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generates a new wallet"})," using the ",(0,t.jsx)(n.code,{children:"WalletService"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Associates the wallet"})," with the user account"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stores the wallet address"})," in the user record"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Create wallet using configured chain\nconst randomWallet = await this.walletService.createWallet();\n\n// Associate wallet with user\nuserData.wallet = randomWallet.address;\n\n// Create user with wallet\nreturn super.create(userData);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-chain-configuration",children:"2. Chain Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The wallet service uses the instance's configured chain:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Single Chain per Instance"}),": Currently supports one chain type per instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Chain Detection"}),": Automatically detects chain type from configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Future Multi-Chain"}),": Designed for future multi-chain support"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-supported-chains",children:"3. Supported Chains"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"EVM Chains"}),": Ethereum, Base, Polygon, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stellar Chain"}),": Stellar blockchain with Soroban smart contracts"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"security-features",children:"Security Features"}),"\n",(0,t.jsx)(n.h3,{id:"1-authentication",children:"1. Authentication"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JWT Tokens"}),": Secure token-based authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session Management"}),": User session tracking"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Token Expiration"}),": Automatic token expiration handling"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-authorization",children:"2. Authorization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Role-Based Access Control (RBAC)"}),": Granular permission system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ability Guards"}),": Action-based authorization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Subject-Based Permissions"}),": Resource-specific access control"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-wallet-security",children:"3. Wallet Security"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custodial Management"}),": Platform manages private keys"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Secure Storage"}),": Encrypted wallet storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Access Control"}),": Limited wallet access to authorized users"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,t.jsx)(n.h3,{id:"1-creating-a-new-user",children:"1. Creating a New User"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// User data without wallet (will be auto-generated)\nconst userData = {\n  name: "John Doe",\n  email: "john@example.com",\n  phone: "+1234567890"\n};\n\n// Create user with automatic wallet generation\nconst newUser = await usersService.create(userData);\nconsole.log(\'User created with wallet:\', newUser.wallet);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-retrieving-user-wallets",children:"2. Retrieving User Wallets"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Get all user wallets\nconst wallets = await usersService.getWallets({\n  page: 1,\n  limit: 10,\n  search: "john"\n});\n\nwallets.forEach(wallet => {\n  console.log(`${wallet.name}: ${wallet.wallet}`);\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-user-authentication",children:"3. User Authentication"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Login with email/password\nconst authResult = await authService.login({\n  email: "john@example.com",\n  password: "password123"\n});\n\n// Use JWT token for API calls\nconst headers = {\n  \'Authorization\': `Bearer ${authResult.token}`\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.h3,{id:"1-wallet-creation-errors",children:"1. Wallet Creation Errors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"try {\n  const user = await usersService.create(userData);\n} catch (error) {\n  if (error.message.includes('wallet creation')) {\n    // Handle wallet creation failure\n    console.error('Failed to create user wallet:', error);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-authentication-errors",children:"2. Authentication Errors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"try {\n  const authResult = await authService.login(credentials);\n} catch (error) {\n  if (error.message.includes('Invalid credentials')) {\n    // Handle authentication failure\n    console.error('Authentication failed:', error);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"1-environment-variables",children:"1. Environment Variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Database\nDATABASE_URL="postgresql://..."\n\n# JWT\nJWT_SECRET="your-jwt-secret"\nJWT_EXPIRES_IN="24h"\n\n# Wallet Service\nWALLET_PATH="./wallet_storage/"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-chain-configuration-1",children:"2. Chain Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The wallet service uses settings from the Settings service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Chain settings configuration\nconst chainSettings = {\n  chainId: "84532",\n  name: "Base Sepolia",\n  type: "evm",\n  rpcUrl: "https://base-sepolia-rpc.publicnode.com",\n  explorerUrl: "https://sepolia.basescan.org",\n  currency: {\n    name: "Ether",\n    symbol: "ETH"\n  }\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"monitoring-and-logging",children:"Monitoring and Logging"}),"\n",(0,t.jsx)(n.h3,{id:"1-user-creation-logs",children:"1. User Creation Logs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"console.log('Creating a new user with a random wallet address');\nconsole.log('Random wallet created:', {\n  address: randomWallet.address,\n  blockchain: randomWallet.blockchain || 'detected',\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-error-logging",children:"2. Error Logging"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"console.error('Error creating user wallet:', error);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,t.jsx)(n.h3,{id:"1-multi-chain-support",children:"1. Multi-Chain Support"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Chain Selection"}),": Allow users to choose their preferred chain"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-Wallet Users"}),": Support multiple wallets per user"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chain Migration"}),": Tools for migrating between chains"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-enhanced-security",children:"2. Enhanced Security"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hardware Security Modules"}),": Integration with HSM for key management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-Factor Authentication"}),": Additional security layers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Audit Logging"}),": Comprehensive audit trails"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-advanced-features",children:"3. Advanced Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wallet Recovery"}),": Self-service wallet recovery mechanisms"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transaction History"}),": User transaction tracking"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Gas Optimization"}),": Smart gas fee management"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);