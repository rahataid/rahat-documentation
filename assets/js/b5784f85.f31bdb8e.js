"use strict";(self.webpackChunkrahat_documentation=self.webpackChunkrahat_documentation||[]).push([[2410],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},60872:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Project-Modules/Cash-Voucher-Assistance/Installation","title":"Installation","description":"This guide provides comprehensive setup instructions for the Rahat Project Payroll (CVA - Cash Voucher Assistance) system. This is a blockchain-based CVA system built with NestJS, Hardhat, and The Graph that enables secure, transparent, and efficient CVA management with blockchain integration.","source":"@site/dev-docs/Project-Modules/03.Cash-Voucher-Assistance/02.Installation.md","sourceDirName":"Project-Modules/03.Cash-Voucher-Assistance","slug":"/Project-Modules/Cash-Voucher-Assistance/Installation","permalink":"/dev-docs/Project-Modules/Cash-Voucher-Assistance/Installation","draft":false,"unlisted":false,"editUrl":"https://github.com/rahataid/rahat-documentation/blob/dev/dev-docs/Project-Modules/03.Cash-Voucher-Assistance/02.Installation.md","tags":[],"version":"current","lastUpdatedAt":1754880255000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Installation"},"sidebar":"myAutogeneratedSidebar","previous":{"title":"Introduction","permalink":"/dev-docs/Project-Modules/Crypto-to-Crypto/Introduction"},"next":{"title":"Introduction","permalink":"/dev-docs/Project-Modules/Cash-Voucher-Assistance/Introduction"}}');var t=s(74848),i=s(28453);const a={sidebar_position:1,title:"Installation"},l=void 0,o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation &amp; Setup",id:"installation--setup",level:2},{value:"1. Clone the Repository",id:"1-clone-the-repository",level:3},{value:"2. Bootstrap the Project",id:"2-bootstrap-the-project",level:3},{value:"3. Start the Application",id:"3-start-the-application",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"Apps",id:"apps",level:3},{value:"Libraries",id:"libraries",level:3},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Backend API (<code>apps/rp</code>)",id:"backend-api-appsrp",level:3},{value:"Smart Contracts (<code>apps/contracts</code>)",id:"smart-contracts-appscontracts",level:3},{value:"The Graph Subgraph (<code>apps/graph</code>)",id:"the-graph-subgraph-appsgraph",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Database Setup",id:"database-setup",level:3},{value:"Available Scripts",id:"available-scripts",level:2},{value:"Development",id:"development",level:3},{value:"Database Management",id:"database-management",level:3},{value:"Smart Contracts",id:"smart-contracts",level:3},{value:"The Graph",id:"the-graph",level:3},{value:"Testing",id:"testing",level:2},{value:"Monitoring &amp; Debugging",id:"monitoring--debugging",level:2},{value:"Prisma Studio",id:"prisma-studio",level:3},{value:"The Graph Playground",id:"the-graph-playground",level:3},{value:"Deployment",id:"deployment",level:2},{value:"Production Build",id:"production-build",level:3},{value:"Docker Deployment",id:"docker-deployment",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Reset Everything",id:"reset-everything",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This guide provides comprehensive setup instructions for the Rahat Project Payroll (CVA - Cash Voucher Assistance) system. This is a blockchain-based CVA system built with NestJS, Hardhat, and The Graph that enables secure, transparent, and efficient CVA management with blockchain integration."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.p,{children:["Before setting up the Rahat Voucher Assistance system, you need to have the rahat-platform running. Please refer to the ",(0,t.jsx)(n.a,{href:"../Getting-Started/02.Setting-up-Local-Environment.md",children:"Rahat Platform Setup Guide"})," for detailed instructions on setting up the core Rahat platform."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," This project depends on the rahat-platform being operational. Ensure the platform is running before proceeding with the voucher assistance setup."]}),"\n",(0,t.jsx)(n.h2,{id:"installation--setup",children:"Installation & Setup"}),"\n",(0,t.jsx)(n.h3,{id:"1-clone-the-repository",children:"1. Clone the Repository"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone <repository-url>\ncd rahat-project-rp\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-bootstrap-the-project",children:"2. Bootstrap the Project"}),"\n",(0,t.jsx)(n.p,{children:"The bootstrap command will set up the entire project environment:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm bootstrap\n"})}),"\n",(0,t.jsx)(n.p,{children:"This command performs the following operations:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Installs all dependencies across the monorepo"}),"\n",(0,t.jsx)(n.li,{children:"Sets up environment variables"}),"\n",(0,t.jsx)(n.li,{children:"Generates Prisma client"}),"\n",(0,t.jsx)(n.li,{children:"Runs database migrations"}),"\n",(0,t.jsx)(n.li,{children:"Seeds initial data"}),"\n",(0,t.jsx)(n.li,{children:"Sets up The Graph subgraph"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-start-the-application",children:"3. Start the Application"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm start\n"})}),"\n",(0,t.jsx)(n.p,{children:"This starts the NestJS API server in development mode."}),"\n",(0,t.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(n.p,{children:"This is a monorepo built with Nx containing multiple applications:"}),"\n",(0,t.jsx)(n.h3,{id:"apps",children:"Apps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"apps/rp"})})," - Main NestJS API server"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"apps/contracts"})})," - Smart contracts (Hardhat)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"apps/graph"})})," - The Graph subgraph for blockchain indexing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"apps/rp-e2e"})})," - End-to-end tests"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"libraries",children:"Libraries"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"libs/extensions"})})," - Shared utilities and extensions"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,t.jsxs)(n.h3,{id:"backend-api-appsrp",children:["Backend API (",(0,t.jsx)(n.code,{children:"apps/rp"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The main NestJS application provides REST APIs for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Beneficiary Management"})," - Add, update, and manage beneficiaries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vendor Management"})," - Handle vendor operations and redemptions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Disbursement Plans"})," - Create and manage payment plans"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blockchain Integration"})," - Process blockchain transactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Communication"})," - Handle notifications and messaging"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"smart-contracts-appscontracts",children:["Smart Contracts (",(0,t.jsx)(n.code,{children:"apps/contracts"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Solidity contracts deployed on blockchain networks:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RahatToken"})," - ERC20 token for disbursements"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RahatPayrollProject"})," - Main CVA project contract"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RahatClaim"})," - Claim processing contract"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RahatTreasury"})," - Treasury management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RahatAccessManager"})," - Access control"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vendor"})," - Vendor management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Redemptions"})," - Redemption processing"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"the-graph-subgraph-appsgraph",children:["The Graph Subgraph (",(0,t.jsx)(n.code,{children:"apps/graph"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Indexes blockchain events and provides GraphQL API for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Token transfers and approvals"}),"\n",(0,t.jsx)(n.li,{children:"CVA project events"}),"\n",(0,t.jsx)(n.li,{children:"Claim processing"}),"\n",(0,t.jsx)(n.li,{children:"Beneficiary management"}),"\n",(0,t.jsx)(n.li,{children:"Vendor operations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file in the root directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:'# Database\nDATABASE_URL="postgresql://rahat:rahat@localhost:5432/rahat-rp"\n\n# Redis\nREDIS_HOST=localhost\nREDIS_PORT=6379\nREDIS_PASSWORD=\n\n# Blockchain\nPRIVATE_KEY=your_private_key\nRPC_URL=your_rpc_url\n\n# The Graph\nGRAPH_NODE_URL=http://localhost:8020\nIPFS_URL=http://localhost:5001\n'})}),"\n",(0,t.jsx)(n.h3,{id:"database-setup",children:"Database Setup"}),"\n",(0,t.jsx)(n.p,{children:"The project uses PostgreSQL with Prisma ORM. The bootstrap script will:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create the database"}),"\n",(0,t.jsx)(n.li,{children:"Run migrations"}),"\n",(0,t.jsx)(n.li,{children:"Seed initial data"}),"\n",(0,t.jsx)(n.li,{children:"Set up The Graph subgraph"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"available-scripts",children:"Available Scripts"}),"\n",(0,t.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start development server\npnpm start\n\n# Build the application\npnpm build:rp\n\n# Run tests\npnpm test\n\n# Reset database and reseed\npnpm reset\n"})}),"\n",(0,t.jsx)(n.h3,{id:"database-management",children:"Database Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run migrations\npnpm migrate:dev\n\n# Reset database\npnpm migrate:reset\n\n# Open Prisma Studio\npnpm prisma:studio\n\n# Generate Prisma client\npnpm prisma:generate\n"})}),"\n",(0,t.jsx)(n.h3,{id:"smart-contracts",children:"Smart Contracts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Compile contracts\npnpm contracts:compile\n\n# Run contract tests\npnpm contracts:test\n\n# Generate coverage report\npnpm contracts:coverage\n\n# Deploy contracts\npnpm contracts:ignite:rahatToken\n"})}),"\n",(0,t.jsx)(n.h3,{id:"the-graph",children:"The Graph"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Generate GraphQL types\npnpm graph:codegen\n\n# Build subgraph\npnpm graph:build\n\n# Deploy to hosted service\npnpm graph:deploy\n\n# Local development\npnpm graph:deploy-local\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run all tests\npnpm test\n\n# Run e2e tests\npnpm test:e2e\n\n# Run contract tests\npnpm contracts:test\n"})}),"\n",(0,t.jsx)(n.h2,{id:"monitoring--debugging",children:"Monitoring & Debugging"}),"\n",(0,t.jsx)(n.h3,{id:"prisma-studio",children:"Prisma Studio"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm prisma:studio\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Access the database GUI at ",(0,t.jsx)(n.a,{href:"http://localhost:5555",children:"http://localhost:5555"})]}),"\n",(0,t.jsx)(n.h3,{id:"the-graph-playground",children:"The Graph Playground"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm graph:deploy-local\n"})}),"\n",(0,t.jsx)(n.p,{children:"Access the GraphQL playground at the URL provided in the output"}),"\n",(0,t.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,t.jsx)(n.h3,{id:"production-build",children:"Production Build"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm build:all\n"})}),"\n",(0,t.jsx)(n.h3,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker build -f Dockerfile.rp -t rahat-project-payroll .\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Database Connection Issues"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure PostgreSQL is running"}),"\n",(0,t.jsx)(n.li,{children:"Check DATABASE_URL in .env file"}),"\n",(0,t.jsx)(n.li,{children:"Verify database exists and is accessible"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Contract Compilation Errors"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check Node.js version (requires v18+)"}),"\n",(0,t.jsx)(n.li,{children:"Ensure all dependencies are installed"}),"\n",(0,t.jsx)(n.li,{children:"Verify Hardhat configuration"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"The Graph Issues"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure Docker is running"}),"\n",(0,t.jsx)(n.li,{children:"Check if ports 8000, 8001, 8002, 8003, 8004, 8005, 8020, 5001 are available"}),"\n",(0,t.jsx)(n.li,{children:"Verify subgraph configuration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"reset-everything",children:"Reset Everything"}),"\n",(0,t.jsx)(n.p,{children:"If you encounter issues, you can reset the entire setup:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Reset database and reseed\npnpm reset\n\n# Clean and reinstall dependencies\nrm -rf node_modules\npnpm install\npnpm bootstrap\n"})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"After successful setup:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Explore the API"})," - Use the provided API documentation to understand available endpoints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Deploy Contracts"})," - Deploy smart contracts to your target blockchain network"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configure The Graph"})," - Set up indexing for your deployed contracts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run Tests"})," - Ensure all components are working correctly"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Start Development"})," - Begin building your CVA application"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For more detailed information, refer to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"./contracts.md",children:"Contract Architecture"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"./api.md",children:"API Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"./deployment.md",children:"Deployment Guide"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);