"use strict";(self.webpackChunkrahat_documentation=self.webpackChunkrahat_documentation||[]).push([[7069],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var i=r(96540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},99089:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Projects/AA/Developer Guide/Getting Started","title":"Getting Started","description":"Prerequisites","source":"@site/docs/Projects/AA/Developer Guide/Getting Started.md","sourceDirName":"Projects/AA/Developer Guide","slug":"/Projects/AA/Developer Guide/Getting Started","permalink":"/docs/Projects/AA/Developer Guide/Getting Started","draft":false,"unlisted":false,"editUrl":"https://github.com/rahataid/rahat-documentation/blob/dev/docs/Projects/AA/Developer Guide/Getting Started.md","tags":[],"version":"current","lastUpdatedAt":1758175872000,"frontMatter":{},"sidebar":"myAutogeneratedSidebar","previous":{"title":"Architecture and tech stack","permalink":"/docs/Projects/AA/Developer Guide/Architecture and Tech Stack"},"next":{"title":"Introduction","permalink":"/docs/Projects/AA/Knowledge Base/Introduction"}}');var s=r(74848),t=r(28453);const o={},l="Getting Started",a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Redis",id:"redis",level:3},{value:"Postgres",id:"postgres",level:3},{value:"Prisma Database Connection",id:"prisma-database-connection",level:3},{value:"Project Settings",id:"project-settings",level:3},{value:"Communication (Optional, for comms integration)",id:"communication-optional-for-comms-integration",level:3},{value:"Blockchain/Chain Variables (Optional, for chain integration)",id:"blockchainchain-variables-optional-for-chain-integration",level:3},{value:"Keys (Optional, for chain integration)",id:"keys-optional-for-chain-integration",level:3},{value:"Stellar Disbursement Platform (SDP)",id:"stellar-disbursement-platform-sdp",level:3},{value:"Installation",id:"installation",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before setting up this project, you must first set up the following services and dependencies:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/rahataid/rahat-platform",children:"Rahat Platform Core"})}),": Core platform service. Follow the setup instructions in its repository."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/rahataid/rahat-project-triggers",children:"Rahat-Triggers"})}),": Event triggers service. Follow the setup instructions in its repository."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/stellar/stellar-disbursement-platform-backend",children:"Stellar Disbursement Platform"})}),": Required for disbursing Stellar tokens. Follow the setup instructions in its repository."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Postgres Database"}),": Used for data storage. Ensure you have a running Postgres instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Node.js"}),": Required to run the application."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Redis Server"}),": Used for caching and message brokering. Ensure you have a running Redis instance."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"redis",children:"Redis"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"REDIS_HOST"}),": Host address for Redis server."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"REDIS_PORT"}),": Port number for Redis server."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"REDIS_PASSWORD"}),": Password for Redis server."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"postgres",children:"Postgres"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_HOST"}),": Host address for Postgres database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_PORT"}),": Port number for Postgres database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_USERNAME"}),": Username for Postgres database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_PASSWORD"}),": Password for Postgres database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_NAME"}),": Database name for Rahat AA."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_RAHAT_CORE"}),": Database name for Rahat Platform Core."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DB_RAHAT_TRIGGERS"}),": Database name for Rahat Triggers."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"prisma-database-connection",children:"Prisma Database Connection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DATABASE_URL"}),": Connection string for the main database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CORE_DATABASE_URL"}),": Connection string for the core database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TRIGGER_DATABASE_URL"}),": Connection string for the triggers database."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"project-settings",children:"Project Settings"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ACTIVE_YEAR"}),": The active year for the project."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RIVER_BASIN"}),": The river basin in use."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"communication-optional-for-comms-integration",children:"Communication (Optional, for comms integration)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"COMMUNICATION_URL"}),": URL for the communication service."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"COMMUNICATION_APP_ID"}),": App ID for the communication service."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"blockchainchain-variables-optional-for-chain-integration",children:"Blockchain/Chain Variables (Optional, for chain integration)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NETWORK_PROVIDER"}),": Network provider URL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CHAIN_NAME"}),": Name of the blockchain network."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CHAIN_ID"}),": Chain ID."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CURRENCY_NAME"}),": Name of the currency."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CURRENCY_SYMBOL"}),": Symbol of the currency."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"keys-optional-for-chain-integration",children:"Keys (Optional, for chain integration)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DEPLOYER_PRIVATE_KEY"}),": Private key for the deployer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RAHAT_ADMIN_PRIVATE_KEY"}),": Private key for the Rahat admin."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"stellar-disbursement-platform-sdp",children:"Stellar Disbursement Platform (SDP)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SDP_VERIFICATION_PIN"}),": Verification PIN for SDP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BASE_URL"}),": Base API URL for SDP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ADMIN_BASE_URL"}),": Admin API URL for SDP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RECERIVER_BASE_URL"}),": Anchor/Receiver API URL for SDP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FRIEND_BOT_STELLAR"}),": URL for Stellar Friendbot (testnet funding)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"STELLAR_DEMO_WALLET"}),": URL for Stellar demo wallet server."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HORIZON_URL"}),": URL for Stellar Horizon server."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ASSET_CREATOR"}),": Public key of the asset creator (to be filled as needed)."]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," Commented variables are optional and can be enabled as per your integration needs."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clone the repository"}),":","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone <repository-url>\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\n2. **Navigate to the project directory**:\n\n   ```bash\n   cd rahat-project-aa\n   ```\n\n3. **Install dependencies**:\n\n   ```bash\n   pnpm install\n   ```\n\n4. **Copy the project-specific schema to `schema.prisma` and run the migration**:\n\n   ```bash\n   npx prisma migrate dev\n   ```\n\n5. **Start the project**:\n\n   ```bash\n   pnpm serve:aa\n   ```\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);