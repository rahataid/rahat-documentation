"use strict";(self.webpackChunkrahat_documentation=self.webpackChunkrahat_documentation||[]).push([[2859],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},37717:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Appendix/Glossary-of-Terms","title":"Glossary of Terms","description":"This glossary provides definitions for key terms and concepts used throughout the Rahat platform documentation. Terms are organized alphabetically for easy reference.","source":"@site/dev-docs/Appendix/01.Glossary-of-Terms.md","sourceDirName":"Appendix","slug":"/Appendix/Glossary-of-Terms","permalink":"/dev-docs/Appendix/Glossary-of-Terms","draft":false,"unlisted":false,"editUrl":"https://github.com/rahataid/rahat-documentation/blob/dev/dev-docs/Appendix/01.Glossary-of-Terms.md","tags":[],"version":"current","lastUpdatedAt":1754881214000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Glossary of Terms"},"sidebar":"myAutogeneratedSidebar","previous":{"title":"CI/CD Pipelines","permalink":"/dev-docs/Deployment/CICD-Pipelines"},"next":{"title":"DB Schema","permalink":"/dev-docs/Appendix/DB-Schema"}}');var t=s(74848),i=s(28453);const a={sidebar_position:1,title:"Glossary of Terms"},o="Glossary of Terms",c={},d=[{value:"A",id:"a",level:2},{value:"B",id:"b",level:2},{value:"C",id:"c",level:2},{value:"D",id:"d",level:2},{value:"E",id:"e",level:2},{value:"F",id:"f",level:2},{value:"G",id:"g",level:2},{value:"H",id:"h",level:2},{value:"I",id:"i",level:2},{value:"J",id:"j",level:2},{value:"K",id:"k",level:2},{value:"L",id:"l",level:2},{value:"M",id:"m",level:2},{value:"N",id:"n",level:2},{value:"O",id:"o",level:2},{value:"P",id:"p",level:2},{value:"R",id:"r",level:2},{value:"S",id:"s",level:2},{value:"T",id:"t",level:2},{value:"U",id:"u",level:2},{value:"V",id:"v",level:2},{value:"W",id:"w",level:2}];function l(e){const n={admonition:"admonition",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"glossary-of-terms",children:"Glossary of Terms"})}),"\n",(0,t.jsx)(n.p,{children:"This glossary provides definitions for key terms and concepts used throughout the Rahat platform documentation. Terms are organized alphabetically for easy reference."}),"\n",(0,t.jsx)(n.h2,{id:"a",children:"A"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Agency"})," - An organization that deploys and manages aid distribution projects on the Rahat platform. Agencies are responsible for setting up projects, managing funds, monitoring progress, and generating reports."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Anticipatory Action (AA)"})," - A proactive humanitarian assistance approach that delivers aid before disasters strike. Rahat's AA module integrates with weather forecasts and early warning systems to trigger automated disbursements based on environmental conditions."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"API (Application Programming Interface)"})," - A set of rules and protocols that allows different software applications to communicate with each other. Rahat provides REST APIs for beneficiary management, vendor operations, and blockchain interactions."]}),"\n",(0,t.jsx)(n.h2,{id:"b",children:"B"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Beneficiary"})," - A person receiving aid through the Rahat platform. Beneficiaries are identified with unique identifiers (often phone numbers), registered in the system, and can receive digital tokens for redemption at local vendors."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Blockchain"})," - A decentralized digital ledger that records transactions across a network of computers. Rahat uses blockchain technology to ensure transparency, security, and immutability of aid distribution records."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Burning"})," - The process of permanently removing tokens from circulation after they have been redeemed or are no longer needed."]}),"\n",(0,t.jsx)(n.h2,{id:"c",children:"C"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cash and Voucher Assistance (CVA)"})," - A humanitarian assistance approach that provides individuals with cash or vouchers for goods and services, rather than direct in-kind assistance. Rahat supports CVA through digital tokens that can be redeemed at registered vendors."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Claim"})," - A request by a beneficiary to redeem tokens for goods or services at a vendor. Claims are processed through OTP verification and smart contract interactions."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Crowdfunding"})," - A web-based, blockchain-supported tool that allows beneficiaries to create and manage online fundraising campaigns to raise funds for their needs."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Crypto to Crypto (C2C)"})," - A Rahat project module that enables secure and efficient transfer of cryptocurrency assets for humanitarian aid distribution, including offramping services to convert crypto to local currency."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Custodial Wallet"})," - A wallet managed by a third party (like an exchange or offramping service) that holds cryptocurrency on behalf of the user. Rahat provides custodial wallet services for beneficiaries who may not have technical expertise."]}),"\n",(0,t.jsx)(n.h2,{id:"d",children:"D"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Database Schema"})," - The structure and organization of data in the Rahat system. The platform uses PostgreSQL with Prisma ORM for data persistence and type-safe queries."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Disbursement"})," - The act of sending aid funds (crypto or tokens) to a beneficiary's wallet. Rahat supports both manual and automated disbursement workflows."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Distribution Strategy"})," - The plan for how tokens will be distributed to beneficiaries, including token types, distribution mechanisms, and redemption rules."]}),"\n",(0,t.jsx)(n.h2,{id:"e",children:"E"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ERC-20"})," - A standard interface for fungible tokens on the Ethereum blockchain. Rahat uses ERC-20 tokens for aid distribution and tracking."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"EVM (Ethereum Virtual Machine)"})," - A runtime environment for smart contracts on Ethereum and other compatible blockchains. Rahat supports EVM-compatible chains for smart contract deployment."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Event Indexing"})," - The process of tracking and storing blockchain events for efficient querying. Rahat uses The Graph protocol to index events like token transfers, beneficiary registrations, and claim processing."]}),"\n",(0,t.jsx)(n.h2,{id:"f",children:"F"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Fungible Token"})," - A type of token where each unit is identical and interchangeable, like cash. Rahat uses fungible tokens to represent generic value for aid distribution."]}),"\n",(0,t.jsx)(n.h2,{id:"g",children:"G"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Gas Fees"})," - Small costs paid to the blockchain network for processing cryptocurrency transactions. These fees vary by network and transaction complexity."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GraphQL"})," - A query language and runtime for APIs that provides a complete description of the data available. Rahat uses GraphQL through The Graph protocol for efficient blockchain data querying."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Group"})," - A collection of beneficiaries organized by geographic, social, economic, or other criteria for targeted aid distribution."]}),"\n",(0,t.jsx)(n.h2,{id:"h",children:"H"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Hardhat"})," - A development environment for Ethereum that helps developers compile, deploy, test, and debug smart contracts. Rahat uses Hardhat for smart contract development and testing."]}),"\n",(0,t.jsx)(n.h2,{id:"i",children:"I"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Identity Verification"})," - The process of confirming a beneficiary's identity, often through KYC (Know Your Customer) procedures that vary by project requirements."]}),"\n",(0,t.jsx)(n.h2,{id:"j",children:"J"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"JWT (JSON Web Token)"})," - A secure way to transmit information between parties as a JSON object. Rahat uses JWT for authentication and authorization across its services."]}),"\n",(0,t.jsx)(n.h2,{id:"k",children:"K"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"KYC (Know Your Customer)"})," - Identity verification procedures used to verify the identity of beneficiaries and prevent fraud. KYC requirements vary by project and regulatory context."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Concepts"})," - Fundamental ideas and principles that are essential for understanding and working with the Rahat platform, including CVA, blockchain technology, and beneficiary management."]}),"\n",(0,t.jsx)(n.h2,{id:"l",children:"L"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Local Vendor"})," - A registered business or service provider that accepts Rahat tokens from beneficiaries in exchange for goods or services. Vendors are onboarded through a verification process."]}),"\n",(0,t.jsx)(n.h2,{id:"m",children:"M"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MetaMask"})," - A popular self-managed crypto wallet used in browsers or mobile apps to interact with blockchain applications."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Microservice"})," - An architectural style where an application is built as a collection of small, independent services. Rahat uses a microservices architecture for scalability and maintainability."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Minting"})," - The process of creating new tokens for distribution. In Rahat, tokens are minted by the treasury and allocated to beneficiaries."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Multi-signature (Multisig) Wallet"})," - A wallet that requires multiple people or entities to approve a transaction, used for security in managing donor funds and critical operations."]}),"\n",(0,t.jsx)(n.h2,{id:"n",children:"N"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NestJS"})," - A progressive Node.js framework for building scalable server-side applications. Rahat's backend services are built using NestJS."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Non-Fungible Token (NFT)"})," - A type of token that represents specific goods or services rather than generic value. Each NFT is unique and not interchangeable."]}),"\n",(0,t.jsx)(n.h2,{id:"o",children:"O"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Offramping"})," - The process of converting cryptocurrency into local money or mobile money. Rahat provides offramping services to help beneficiaries access local currency."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"OTP (One-Time Password)"})," - A temporary password used for secure verification, particularly in claim processing and beneficiary authentication."]}),"\n",(0,t.jsx)(n.h2,{id:"p",children:"P"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Point-of-Service"})," - Applications or systems that vendors use to accept tokens from beneficiaries and process redemptions."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Private Key"})," - A secret cryptographic key used to sign transactions and prove ownership of blockchain assets. Private keys must be kept secure and confidential."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Project"})," - A specific aid distribution program with defined timeline, geographic scope, distribution strategy, funding source, and team structure."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Prisma ORM"})," - A modern database toolkit for Node.js and TypeScript that provides type-safe database access. Rahat uses Prisma for database operations."]}),"\n",(0,t.jsx)(n.h2,{id:"r",children:"R"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Rahat"})," - An open-source, blockchain-based platform that helps humanitarian organizations deliver cash and resources directly to people\u2014quickly, securely, and with transparency."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Redemption"})," - The process where beneficiaries exchange tokens for goods or services at registered vendors."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Redis"})," - An in-memory data structure store used for caching, session management, and message queuing in the Rahat platform."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"REST API"})," - A set of rules for building web services that use HTTP methods to perform operations on resources. Rahat provides REST APIs for various platform functions."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Role-based Access Control (RBAC)"})," - A method of restricting system access based on the roles of individual users. Rahat implements RBAC for secure platform management."]}),"\n",(0,t.jsx)(n.h2,{id:"s",children:"S"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Safe/Gnosis"})," - A smart contract wallet that requires multiple approvals for transactions, used in Rahat's multisig operations for enhanced security."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Seed Phrase"})," - A set of secret words used to recover or back up a wallet. Losing the seed phrase means losing access to the wallet forever."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Self-Managed Wallet"})," - A wallet controlled fully by the user (e.g., MetaMask), where only the user has access to the private keys."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Settlement"})," - The process of converting redeemed tokens to fiat currency for vendors."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Smart Contract"})," - Self-executing code on the blockchain that automatically runs when conditions are met. Rahat uses smart contracts for token distribution, claim processing, and beneficiary management."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Soroban"})," - Stellar's native smart contract platform that enables programmable aid workflows on the Stellar network."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Stablecoin"})," - A cryptocurrency with a fixed value, tied to a real currency like the US Dollar (e.g., USDC, USDT). Rahat uses stablecoins for predictable aid distribution."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Stellar"})," - A blockchain network known for fast and low-cost transactions, ideal for cross-border payments and scalable cash assistance."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Subgraph"})," - A GraphQL API that indexes blockchain data for efficient querying. Rahat uses subgraphs to provide fast access to blockchain events and data."]}),"\n",(0,t.jsx)(n.h2,{id:"t",children:"T"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Token"})," - A digital representation of value or assets on the blockchain. Rahat uses tokens to represent aid funds that can be distributed and redeemed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Treasury Wallet"})," - The wallet address that holds the funds to be disbursed to beneficiaries. The treasury manages token creation and allocation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Transaction"})," - The process of sending or receiving cryptocurrency from one wallet to another, recorded on the blockchain."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Trigger"})," - A signal or condition that starts the aid process\u2014e.g., a flood warning triggering crypto disbursement in Anticipatory Action projects."]}),"\n",(0,t.jsx)(n.h2,{id:"u",children:"U"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"USDC"})," - A stablecoin pegged to the US Dollar, commonly used in Rahat for aid distribution due to its stability and wide acceptance."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"User Management"})," - The system for managing platform users, including authentication, authorization, and role assignments."]}),"\n",(0,t.jsx)(n.h2,{id:"v",children:"V"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Vendor"})," - A shop or service provider that accepts tokens from beneficiaries in exchange for goods or services. Vendors are registered and verified in the Rahat system."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Vendor Management"})," - The process of onboarding, verifying, and managing local vendors who participate in the aid distribution network."]}),"\n",(0,t.jsx)(n.h2,{id:"w",children:"W"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Wallet"})," - A digital tool (app or extension) used to store, send, and receive cryptocurrency. Rahat supports both custodial and self-managed wallets."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Wallet Address"})," - A unique identifier for a blockchain wallet, used to send and receive cryptocurrency and tokens."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"This glossary covers the most commonly used terms in the Rahat platform. For more detailed explanations of specific concepts, refer to the relevant documentation sections."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);