"use strict";(self.webpackChunkrahat_documentation=self.webpackChunkrahat_documentation||[]).push([[1375],{20676:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Project-Modules/Anticipatory-Action/Forecast-Data-Sources","title":"Forecast Data Sources","description":"This document provides detailed information about the environmental data sources integrated into the Rahat Anticipatory Action platform, including their APIs, data processing, and usage patterns.","source":"@site/dev-docs/Project-Modules/01.Anticipatory-Action/03.Forecast-Data-Sources.md","sourceDirName":"Project-Modules/01.Anticipatory-Action","slug":"/Project-Modules/Anticipatory-Action/Forecast-Data-Sources","permalink":"/dev-docs/Project-Modules/Anticipatory-Action/Forecast-Data-Sources","draft":false,"unlisted":false,"editUrl":"https://github.com/rahataid/rahat-documentation/blob/dev/dev-docs/Project-Modules/01.Anticipatory-Action/03.Forecast-Data-Sources.md","tags":[],"version":"current","lastUpdatedAt":1754021427000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Forecast Data Sources"},"sidebar":"myAutogeneratedSidebar","previous":{"title":"Introduction","permalink":"/dev-docs/Project-Modules/Anticipatory-Action/Introduction"},"next":{"title":"Financial Payout Services","permalink":"/dev-docs/Project-Modules/Anticipatory-Action/Payout-Services"}}');var r=i(74848),a=i(28453);const s={sidebar_position:3,title:"Forecast Data Sources"},o="Forecast Data Sources",l={},d=[{value:"Overview",id:"overview",level:2},{value:"1. Department of Hydrology and Meteorology (DHM)",id:"1-department-of-hydrology-and-meteorology-dhm",level:2},{value:"Purpose",id:"purpose",level:3},{value:"API Integration",id:"api-integration",level:3},{value:"Base Configuration",id:"base-configuration",level:4},{value:"Data Synchronization",id:"data-synchronization",level:4},{value:"API Endpoints Used",id:"api-endpoints-used",level:4},{value:"River Station Data",id:"river-station-data",level:5},{value:"Station Information",id:"station-information",level:5},{value:"Data Processing",id:"data-processing",level:3},{value:"Water Level Monitoring",id:"water-level-monitoring",level:4},{value:"Threshold Comparison Logic",id:"threshold-comparison-logic",level:4},{value:"Use Cases",id:"use-cases",level:3},{value:"1. Flood Early Warning",id:"1-flood-early-warning",level:4},{value:"2. River Monitoring",id:"2-river-monitoring",level:4},{value:"Data Storage Schema",id:"data-storage-schema",level:3},{value:"2. Global Flood Awareness System (GLOFAS)",id:"2-global-flood-awareness-system-glofas",level:2},{value:"Purpose",id:"purpose-1",level:3},{value:"API Integration",id:"api-integration-1",level:3},{value:"Base Configuration",id:"base-configuration-1",level:4},{value:"Data Synchronization",id:"data-synchronization-1",level:4},{value:"Integration with Trigger System",id:"integration-with-trigger-system",level:2},{value:"Multi-Source Trigger Logic",id:"multi-source-trigger-logic",level:3},{value:"Trigger Priority System",id:"trigger-priority-system",level:3},{value:"Data Quality and Reliability",id:"data-quality-and-reliability",level:2},{value:"DHM Data Quality",id:"dhm-data-quality",level:3},{value:"GLOFAS Data Quality",id:"glofas-data-quality",level:3},{value:"Monitoring and Alerting",id:"monitoring-and-alerting",level:2},{value:"Data Source Health Monitoring",id:"data-source-health-monitoring",level:3},{value:"Alert Thresholds",id:"alert-thresholds",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Planned Integrations",id:"planned-integrations",level:3},{value:"Scalability Considerations",id:"scalability-considerations",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"forecast-data-sources",children:"Forecast Data Sources"})}),"\n",(0,r.jsx)(n.p,{children:"This document provides detailed information about the environmental data sources integrated into the Rahat Anticipatory Action platform, including their APIs, data processing, and usage patterns."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The platform integrates multiple environmental data sources to provide comprehensive climate monitoring and forecasting capabilities. These sources enable automated trigger activation based on real-time environmental conditions."}),"\n",(0,r.jsx)(n.h2,{id:"1-department-of-hydrology-and-meteorology-dhm",children:"1. Department of Hydrology and Meteorology (DHM)"}),"\n",(0,r.jsx)(n.h3,{id:"purpose",children:"Purpose"}),"\n",(0,r.jsx)(n.p,{children:"DHM provides real-time hydrological data for river monitoring and flood prediction in Nepal. This service is critical for early warning systems in flood-prone regions."}),"\n",(0,r.jsx)(n.h3,{id:"api-integration",children:"API Integration"}),"\n",(0,r.jsx)(n.h4,{id:"base-configuration",children:"Base Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Configuration in settings\nDATASOURCE: {\n  DHM: {\n    location: 'Babai at Chepang', // or 'Karnali at Chisapani'\n    url: 'https://bipadportal.gov.np/api/v1'\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"data-synchronization",children:"Data Synchronization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frequency"}),": Every 5 minutes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": Automated cron job (",(0,r.jsx)(n.code,{children:"@Cron('*/5 * * * *')"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Process"}),": Fetches latest water level data and stores in local database"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"api-endpoints-used",children:"API Endpoints Used"}),"\n",(0,r.jsx)(n.h5,{id:"river-station-data",children:"River Station Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// GET /api/v1/water-levels\n// Returns: Array of water level readings with timestamps\n{\n  "data": {\n    "results": [\n      {\n        "station": "Babai at Chepang",\n        "waterLevel": 2.45,\n        "timestamp": "2024-01-15T10:30:00Z",\n        "location": "coordinates",\n        "status": "active"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"station-information",children:"Station Information"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// GET /api/v1/stations\n// Returns: List of available monitoring stations\n{\n  "stations": [\n    {\n      "id": "BABAI_001",\n      "name": "Babai at Chepang",\n      "location": "coordinates",\n      "river": "Babai",\n      "status": "active"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"data-processing",children:"Data Processing"}),"\n",(0,r.jsx)(n.h4,{id:"water-level-monitoring",children:"Water Level Monitoring"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Trigger criteria check\nasync criteriaCheck(payload: AddTriggerStatement) {\n  const recentData = await this.prisma.sourcesData.findFirst({\n    where: {\n      location: payload.location,\n      source: 'DHM',\n    },\n    orderBy: { createdAt: 'desc' }\n  });\n\n  const currentLevel = recentData.data.waterLevel;\n  const threshold = payload.triggerStatement?.waterLevel;\n  \n  return this.compareWaterLevels(currentLevel, threshold);\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"threshold-comparison-logic",children:"Threshold Comparison Logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"compareWaterLevels(currentLevel: number, threshold: number): boolean {\n  // Trigger when water level exceeds threshold\n  return currentLevel >= threshold;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsx)(n.h4,{id:"1-flood-early-warning",children:"1. Flood Early Warning"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trigger Condition"}),": Water level > 3.5 meters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Response"}),": Immediate beneficiary notification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lead Time"}),": 2-6 hours depending on river flow"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-river-monitoring",children:"2. River Monitoring"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Continuous Monitoring"}),": 24/7 water level tracking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Storage"}),": Historical data for trend analysis"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alert System"}),": Automated notifications for threshold breaches"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"data-storage-schema",children:"Data Storage Schema"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- sources_data table\nCREATE TABLE sources_data (\n  id SERIAL PRIMARY KEY,\n  location VARCHAR(255),\n  source VARCHAR(50), -- 'DHM'\n  data JSONB, -- Contains water level, timestamp, station info\n  created_at TIMESTAMP DEFAULT NOW()\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"2-global-flood-awareness-system-glofas",children:"2. Global Flood Awareness System (GLOFAS)"}),"\n",(0,r.jsx)(n.h3,{id:"purpose-1",children:"Purpose"}),"\n",(0,r.jsx)(n.p,{children:"GLOFAS provides global flood forecasting data with probability assessments and lead time analysis. This service enables advanced flood prediction with longer lead times than local monitoring."}),"\n",(0,r.jsx)(n.h3,{id:"api-integration-1",children:"API Integration"}),"\n",(0,r.jsx)(n.h4,{id:"base-configuration-1",children:"Base Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Configuration in settings\nDATASOURCE: {\n  GLOFAS: {\n    location: \'Babai at Chepang\',\n    url: "https://ows.globalfloods.eu/glofas-ows/ows.py",\n    bbox: "9066450.71499904,3117815.425733483,9405627.288509797,3456991.999244238",\n    i: "89", // coordinate for station\n    j: "409"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"data-synchronization-1",children:"Data Synchronization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frequency"}),": Every hour"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": Automated cron job (",(0,r.jsx)(n.code,{children:"@Cron('0 * * * *')"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Process"}),": Fetches forecast data and stores with date tracking"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-trigger-system",children:"Integration with Trigger System"}),"\n",(0,r.jsx)(n.h3,{id:"multi-source-trigger-logic",children:"Multi-Source Trigger Logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Combined trigger assessment\nasync assessTriggerConditions(location: string, triggerConfig: TriggerConfig) {\n  const dhmData = await this.getDHMData(location);\n  const glofasData = await this.getGLOFASData(location);\n  \n  // DHM immediate trigger\n  const dhmTriggered = this.checkDHMThreshold(dhmData, triggerConfig.dhmThreshold);\n  \n  // GLOFAS probability trigger\n  const glofasTriggered = this.checkGLOFASProbability(glofasData, triggerConfig.probabilityThreshold);\n  \n  return {\n    immediateTrigger: dhmTriggered,\n    forecastTrigger: glofasTriggered,\n    combinedRisk: this.calculateCombinedRisk(dhmData, glofasData)\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"trigger-priority-system",children:"Trigger Priority System"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Immediate Triggers"}),": DHM water level thresholds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Forecast Triggers"}),": GLOFAS probability assessments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Combined Triggers"}),": Both sources indicating high risk"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"data-quality-and-reliability",children:"Data Quality and Reliability"}),"\n",(0,r.jsx)(n.h3,{id:"dhm-data-quality",children:"DHM Data Quality"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accuracy"}),": \xb10.1 meter water level precision"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Availability"}),": 99.5% uptime"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Latency"}),": 5-minute data refresh"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coverage"}),": 15 major river stations in Nepal"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"glofas-data-quality",children:"GLOFAS Data Quality"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accuracy"}),": 85-90% forecast accuracy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Availability"}),": 99.9% uptime"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Latency"}),": 1-hour forecast updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coverage"}),": Global coverage with regional focus"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"monitoring-and-alerting",children:"Monitoring and Alerting"}),"\n",(0,r.jsx)(n.h3,{id:"data-source-health-monitoring",children:"Data Source Health Monitoring"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Uptime Monitoring"}),": Track API availability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Quality Checks"}),": Validate received data format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Latency Monitoring"}),": Track response times"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Rate Tracking"}),": Monitor failed requests"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alert-thresholds",children:"Alert Thresholds"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DHM"}),": Alert if no data for > 15 minutes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GLOFAS"}),": Alert if no data for > 2 hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Quality"}),": Alert if data format is invalid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trigger Failures"}),": Alert if trigger processing fails"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,r.jsx)(n.h3,{id:"planned-integrations",children:"Planned Integrations"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Satellite Data"}),": Integration with satellite-based flood monitoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Machine Learning"}),": Enhanced prediction models"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Additional Sources"}),": Integration with regional meteorological services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time Processing"}),": Stream processing for immediate analysis"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"scalability-considerations",children:"Scalability Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Volume"}),": Handle increasing data from multiple sources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Processing Speed"}),": Optimize for real-time trigger assessment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Storage"}),": Efficient storage of historical data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reliability"}),": Redundant data sources for critical regions"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(96540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);